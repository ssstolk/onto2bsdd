# SPDX-License-Identifier: Apache-2.0
# Copyright Â© 2023 Sander Stolk

PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX sh: <http://www.w3.org/ns/shacl#>
PREFIX bs: <https://w3id.org/def/basicsemantics-owl#>
PREFIX nen2660: <https://w3id.org/nen2660/def#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX lotl: <http://www.laces.tech/publication/ns/semmtech/live/laces/schema/otl-manager/>

SELECT DISTINCT ?ontoClassPrefLabel ?ontoClassURI ?ontoClassDefinition ?mappedClassRelation ?mappedClassRelationURI ?mappedClassURI ?ontoParentClassPrefLabel ?ontoParentClass ?ontoPropertyURI ?ontoPropertyPrefLabel ?ontoPropertyDatatypeLabel ?ontoPropertyDatatype
WHERE {
  ?originalOntoClassURI a lotl:PhysicalObject .
  ?originalOntoClassURI lotl:attr-Conceptual-name ?ontoClassPrefLabel .
  
  OPTIONAL {
    ?originalOntoClassURI lotl:rel-Conceptual-isSpecializationOf ?originalOntoParentClass .
    ?originalOntoParentClass lotl:attr-Conceptual-name ?ontoParentClassPrefLabel .
    FILTER (STRSTARTS(STR(?originalOntoParentClass), "http://hub.laces.tech/digitalbuildingdata/ils-o-en-e/production/poc-bsdd-publicatie/")
         || STRSTARTS(STR(?originalOntoParentClass), "http://www.example.org/")) .
  }
  
  OPTIONAL
  {{
      ?hasAspect a lotl:PhysicalObject-hasAspect-Aspect .
      ?hasAspect lotl:rel-Relation-from ?originalOntoClassURI .
      ?hasAspect lotl:rel-Relation-to ?originalOntoPropertyURI  .
      ?originalOntoPropertyURI  lotl:attr-Conceptual-name ?ontoPropertyPrefLabel .
      ?originalOntoPropertyURI  lotl:attr-Aspect-datatype ?ontoPropertyDatatype .
      BIND (STRAFTER(STR(?ontoPropertyDatatype), STR(xsd:)) AS ?ontoPropertyDatatypeLabel) .
  } UNION {
      {
        ?originalOntoClassURI lotl:rel-Conceptual-hasExternalLink ?mapping .
        ?mapping lotl:attr-ExternalLink-uri ?originalMappedClassURIstring .
        ?mapping lotl:attr-ExternalLink-relation ?mappedClassRelationString .
        BIND (URI(STR(?originalMappedClassURIstring)) AS ?originalMappedClassURI) .
        BIND (IF((?mappedClassRelationString="isSpecializationOf"), "IsChildOf",
              IF((?mappedClassRelationString="isGeneralizationOf"), "IsParentOf",
              IF((?mappedClassRelationString="isSameAs"), "IsEqualTo",
              IF((?mappedClassRelationString="isWholeFor"), "HasPart",
              IF((?mappedClassRelationString="isPartOf"), "IsPartOf", "HasReference"))))) 
              AS ?mappedClassRelation) .
        BIND (IF((?mappedClassRelationString="isSpecializationOf"), rdfs:subClassOf,
              IF((?mappedClassRelationString="isGeneralizationOf"), URI(CONCAT(STR(owl:inverseOf),":",STR(rdfs:subClassOf))),
              IF((?mappedClassRelationString="isSameAs"), owl:equivalentClass,
              IF((?mappedClassRelationString="isWholeFor"), nen2660:hasPart,
              IF((?mappedClassRelationString="isPartOf"), URI(CONCAT(STR(owl:inverseOf),":",STR(nen2660:hasPart))), rdfs:seeAlso))))) 
              AS ?mappedClassRelationURI) .
      } UNION {
        ?originalOntoClassURI lotl:rel-Conceptual-isSpecializationOf ?originalMappedClassURI .
        FILTER (!(STRSTARTS(STR(?originalMappedClassURI), "http://hub.laces.tech/digitalbuildingdata/ils-o-en-e/production/poc-bsdd-publicatie/")
               || STRSTARTS(STR(?originalMappedClassURI), "http://www.example.org/"))) .
        BIND ("IsChildOf" AS ?mappedClassRelation) . # in Laces: "isSpecializationOf"
        BIND (rdfs:subClassOf AS ?mappedClassRelationURI) .
      } UNION {
        ?originalMappedClassURI lotl:rel-Conceptual-isSpecializationOf ?originalOntoClassURI .
        FILTER (!(STRSTARTS(STR(?originalMappedClassURI), "http://hub.laces.tech/digitalbuildingdata/ils-o-en-e/production/poc-bsdd-publicatie/")
               || STRSTARTS(STR(?originalMappedClassURI), "http://www.example.org/"))) .
        BIND ("IsParentOf" AS ?mappedClassRelation) . # in Laces: "isGeneralizationOf"
        BIND (URI(CONCAT(STR(owl:inverseOf),":",STR(rdfs:subClassOf))) AS ?mappedClassRelationURI) .
      }
  }}
  
# If needed, create new URI by replacing the URL. 
  BIND(IRI(REPLACE(STR(?originalOntoClassURI), "http://www.example.org/", "http://hub.laces.tech/digitalbuildingdata/ils-o-en-e/development/poc-ils-oene-bsdd/class/")) AS ?ontoClassURI) .

# If needed, create new originalMappedClassURI by replacing the URL. 
  BIND(IRI(REPLACE(STR(?originalMappedClassURI), "https://identifier.buildingsmart.org/uri/buildingsmart/ifc-4.3/class/", "https://identifier.buildingsmart.org/uri/buildingsmart/ifc/4.3/class/")) AS ?mappedClassURI) .
 
# If needed, create new originalOntoPropertyURI by replacing the URL. 
  BIND(IRI(
    IF(
      STRSTARTS(STR(?originalOntoPropertyURI), "https://identifier.buildingsmart.org/uri/buildingsmart/ifc-4.3/prop/"),
      REPLACE(STR(?originalOntoPropertyURI), "https://identifier.buildingsmart.org/uri/buildingsmart/ifc-4.3/prop/", "https://identifier.buildingsmart.org/uri/buildingsmart/ifc/4.3/prop/"),
      REPLACE(STR(?originalOntoPropertyURI), "http://www.example.org/", "http://hub.laces.tech/digitalbuildingdata/ils-o-en-e/development/poc-ils-oene-bsdd/prop/")
    )
  ) AS ?ontoPropertyURI) .
 
# If needed, create new originalOntoParentClass by replacing the URL. 
  BIND(IRI(
    IF(
      STRSTARTS(STR(?originalOntoParentClass), "https://identifier.buildingsmart.org/uri/buildingsmart/ifc-4.3/class/"),
      REPLACE(STR(?originalOntoParentClass), "https://identifier.buildingsmart.org/uri/buildingsmart/ifc-4.3/class/", "https://identifier.buildingsmart.org/uri/buildingsmart/ifc/4.3/class/"),
      REPLACE(STR(?originalOntoParentClass), "http://www.example.org/", "http://hub.laces.tech/digitalbuildingdata/ils-o-en-e/development/poc-ils-oene-bsdd/class/")
    )
  ) AS ?ontoParentClass) .
}